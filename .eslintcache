[{"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/Header.js":"1","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/playerRankerChart.js":"2","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeFantasyValue.js":"3","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/App.js":"4","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/PlayerRankerContainer.js":"5","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/MainContainer.js":"6","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeLeagueAverage.js":"7","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeAverage.js":"8","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/TradeAnalyzerContainer.js":"9","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/index.js":"10","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/footer.js":"11","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actionTypes.js":"12","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/reportWebVitals.js":"13","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actions.js":"14","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/WelcomePageContainer.js":"15","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/loading.js":"16","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/SimilarPlayersContainer.js":"17","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/similarPlayerChart.js":"18","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/CategorySelector.js":"19","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/categorySelector.js":"20","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/rootReducer.js":"21"},{"size":1043,"mtime":1611270122437,"results":"22","hashOfConfig":"23"},{"size":5781,"mtime":1611350418366,"results":"24","hashOfConfig":"23"},{"size":2823,"mtime":1611342768745,"results":"25","hashOfConfig":"23"},{"size":1173,"mtime":1611270122436,"results":"26","hashOfConfig":"23"},{"size":320,"mtime":1611339065424,"results":"27","hashOfConfig":"23"},{"size":1766,"mtime":1611270122439,"results":"28","hashOfConfig":"23"},{"size":1682,"mtime":1611189061225,"results":"29","hashOfConfig":"23"},{"size":3994,"mtime":1611189061225,"results":"30","hashOfConfig":"23"},{"size":332,"mtime":1610582714525,"results":"31","hashOfConfig":"23"},{"size":888,"mtime":1610578751202,"results":"32","hashOfConfig":"23"},{"size":1096,"mtime":1611281090146,"results":"33","hashOfConfig":"23"},{"size":159,"mtime":1611338805656,"results":"34","hashOfConfig":"23"},{"size":362,"mtime":1610231744011,"results":"35","hashOfConfig":"23"},{"size":444,"mtime":1611338817640,"results":"36","hashOfConfig":"23"},{"size":292,"mtime":1611265028704,"results":"37","hashOfConfig":"23"},{"size":166,"mtime":1611270122438,"results":"38","hashOfConfig":"23"},{"size":179,"mtime":1611328284547,"results":"39","hashOfConfig":"23"},{"size":1449,"mtime":1611350708032,"results":"40","hashOfConfig":"23"},{"size":2508,"mtime":1611338668005,"results":"41","hashOfConfig":"23"},{"size":3015,"mtime":1611343905949,"results":"42","hashOfConfig":"23"},{"size":1195,"mtime":1611344440362,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h0gt8",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/Header.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/playerRankerChart.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeFantasyValue.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/App.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/PlayerRankerContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/MainContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeLeagueAverage.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeAverage.js",["92","93","94"],"\n\nexport function computeAverage(player, gamesParameter = player.player_games.length) {\n  let playerGames = player.player_games\n  let gP = gamesParameter\n\n  let playerAverages = {\n    name: player.name,\n    nba_team_id: player.nba_team_id,\n    position: player.position,\n    avg_mins: avgCaddy(playerGames, \"mins\", gP),\n    avg_fgm: avgCaddy(playerGames, \"fgm\", gP),\n    avg_fga: avgCaddy(playerGames, \"fga\", gP),\n    fgp: avgCaddy(playerGames, \"fgp\", gP),\n    avg_ftm: avgCaddy(playerGames, \"ftm\", gP),\n    avg_fta: avgCaddy(playerGames, \"fta\", gP),\n    ftp: avgCaddy(playerGames, \"ftp\", gP),\n    avg_tpm: avgCaddy(playerGames, \"tpm\", gP),\n    avg_tpa: avgCaddy(playerGames, \"tpa\", gP),\n    tpp: avgCaddy(playerGames, \"tpp\", gP),\n    avg_off_reb: avgCaddy(playerGames, \"off_reb\", gP),\n    avg_def_reb: avgCaddy(playerGames, \"def_reb\", gP),\n    avg_tot_reb: avgCaddy(playerGames, \"tot_reb\", gP),\n    avg_assists: avgCaddy(playerGames, \"assists\", gP),\n    avg_steals: avgCaddy(playerGames, \"steals\", gP),\n    avg_blocks: avgCaddy(playerGames, \"blocks\", gP),\n    avg_turnovers: avgCaddy(playerGames, \"turnovers\", gP),\n    avg_plus_minus: avgCaddy(playerGames, \"plus_minus\", gP),\n    avg_p_fouls: avgCaddy(playerGames, \"p_fouls\", gP),\n    avg_points: avgCaddy(playerGames, \"points\", gP),\n    games_played: gamesPlayed(playerGames)\n  }\n  return playerAverages\n}\n\nfunction avgCaddy(playerGames, stat, gP) {\n  switch (stat) {\n    case \"fgp\" || \"ftp\" || \"tpp\":\n      if (playerGames.length > 0) {\n        let madeArray = []\n        let attemptsArray = []\n        let cat = stat.slice(0, 2)\n\n        for (const game in playerGames) {\n          if (parseInt(playerGames[game].mins) > 0) {\n            madeArray.push(parseFloat(playerGames[game][`${cat}m`]))\n            attemptsArray.push(parseFloat(playerGames[game][`${cat}a`]))\n          }\n        }\n\n        // adjust array conditionals to safeguard against User attempting to view more games\n        // than the player has played; no negative slice\n        let adjustMadeArray = []\n        {\n          madeArray.length - gP >= 0\n            ? adjustMadeArray = [...madeArray.slice(madeArray.length - gP)]\n            : adjustMadeArray = [...madeArray]\n        }\n\n        let adjustAttemptsArray = []\n        {\n          attemptsArray.length - gP >= 0\n            ? adjustAttemptsArray = attemptsArray.slice(attemptsArray.length - gP)\n            : adjustAttemptsArray = [...attemptsArray]\n        }\n\n        // conditionals guard against dividing by zero\n        let avgMade = 0.0\n        if (adjustMadeArray.length > 0){\n           avgMade = adjustMadeArray.reduce((tot, val) => tot + val) / adjustMadeArray.length\n        }\n\n        let avgAttempts = 0.0\n        if (adjustAttemptsArray.length > 0){\n           avgAttempts = adjustAttemptsArray.reduce((tot, val) => tot + val) / adjustAttemptsArray.length\n        }\n\n        if (avgAttempts > 0){\n          return parseFloat((avgMade * 100 / avgAttempts).toFixed(1))\n        } else {\n          return 0.0\n        }\n      } else {\n        return 0.0\n      }\n    default:\n      if (playerGames.length > 0) {\n        let sumArray = []\n        for (const game in playerGames) {\n          if(parseInt(playerGames[game].mins) > 0) {\n            sumArray.push(parseFloat(playerGames[game][stat]))\n          }\n        }\n        let adjustArray = []\n        {\n          sumArray.length - gP >= 0\n            ? adjustArray = [...sumArray.slice(sumArray.length - gP)]\n            : adjustArray = [...sumArray]\n        }\n        let average = 0.0 \n        if (adjustArray.length > 0){\n          average = parseFloat((adjustArray.reduce((tot, val) => tot + val) / gP).toFixed(1))\n        } else {\n          average = 0.0\n        }\n        return average\n      } else {\n        return 0.0\n      }\n  }\n}\n\nfunction gamesPlayed(playerGames){\n  let gamesPlayed = []\n  for (const game in playerGames) {\n    if(parseInt(playerGames[game].mins) > 0) {\n      gamesPlayed.push(1)\n    }\n  }\n  return gamesPlayed.length\n}",["95","96"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/TradeAnalyzerContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/index.js",[],["97","98"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/footer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actionTypes.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/reportWebVitals.js",[],["99","100"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actions.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/WelcomePageContainer.js",["101"],"export default function WelcomePageContainer() {\n  return (\n    <div className=\"welcome\">\n      <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fa.espncdn.com%2Fcombiner%2Fi%3Fimg%3D%252Fphoto%252F2017%252F0525%252Fr212664_1296x729_16-9.jpg&f=1&nofb=1\"/>\n    </div>\n  )\n}",["102","103"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/loading.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/SimilarPlayersContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/similarPlayerChart.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/CategorySelector.js",["104","105"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/categorySelector.js",["106"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/rootReducer.js",[],{"ruleId":"107","severity":1,"message":"108","line":54,"column":9,"nodeType":"109","messageId":"110","endLine":58,"endColumn":10},{"ruleId":"107","severity":1,"message":"108","line":61,"column":9,"nodeType":"109","messageId":"110","endLine":65,"endColumn":10},{"ruleId":"107","severity":1,"message":"108","line":95,"column":9,"nodeType":"109","messageId":"110","endLine":99,"endColumn":10},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"111","replacedBy":"117"},{"ruleId":"113","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":4,"column":7,"nodeType":"121","endLine":4,"endColumn":186},{"ruleId":"111","replacedBy":"122"},{"ruleId":"113","replacedBy":"123"},{"ruleId":"124","severity":2,"message":"125","line":41,"column":3,"nodeType":"126","messageId":"127","endLine":41,"endColumn":22},{"ruleId":"128","severity":2,"message":"129","line":41,"column":3,"nodeType":"130","messageId":"131","endLine":41,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":1,"column":27,"nodeType":"130","messageId":"134","endLine":1,"endColumn":36},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],["135"],["136"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["135"],["136"],"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'dispatchSetCategory' is not defined.","Identifier","undef","no-unused-vars","'useEffect' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]