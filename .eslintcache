[{"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/Header.js":"1","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/playerRankerChart.js":"2","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeFantasyValue.js":"3","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/App.js":"4","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/PlayerRankerContainer.js":"5","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/MainContainer.js":"6","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeLeagueAverage.js":"7","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeAverage.js":"8","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/TradeAnalyzerContainer.js":"9","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/index.js":"10","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/footer.js":"11","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actionTypes.js":"12","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/reportWebVitals.js":"13","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actions.js":"14","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/WelcomePageContainer.js":"15","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/loading.js":"16","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/SimilarPlayersContainer.js":"17","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/similarPlayerChart.js":"18","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/CategorySelector.js":"19","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/categorySelector.js":"20","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/rootReducer.js":"21","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/tradeAnalyzerSelector.js":"22","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeTradeScore.js":"23","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/tradeResultChart.js":"24","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/combineValues.js":"25"},{"size":1497,"mtime":1611772734726,"results":"26","hashOfConfig":"27"},{"size":4485,"mtime":1611715827916,"results":"28","hashOfConfig":"27"},{"size":2831,"mtime":1611535380894,"results":"29","hashOfConfig":"27"},{"size":1133,"mtime":1611441537450,"results":"30","hashOfConfig":"27"},{"size":468,"mtime":1611716282810,"results":"31","hashOfConfig":"27"},{"size":1766,"mtime":1611607217713,"results":"32","hashOfConfig":"27"},{"size":1682,"mtime":1611189061225,"results":"33","hashOfConfig":"27"},{"size":3994,"mtime":1611189061225,"results":"34","hashOfConfig":"27"},{"size":1377,"mtime":1611717076977,"results":"35","hashOfConfig":"27"},{"size":888,"mtime":1610578751202,"results":"36","hashOfConfig":"27"},{"size":1163,"mtime":1611768780006,"results":"37","hashOfConfig":"27"},{"size":200,"mtime":1611535380892,"results":"38","hashOfConfig":"27"},{"size":362,"mtime":1610231744011,"results":"39","hashOfConfig":"27"},{"size":547,"mtime":1611535380892,"results":"40","hashOfConfig":"27"},{"size":473,"mtime":1611769599005,"results":"41","hashOfConfig":"27"},{"size":166,"mtime":1611270122438,"results":"42","hashOfConfig":"27"},{"size":263,"mtime":1611722667677,"results":"43","hashOfConfig":"27"},{"size":4552,"mtime":1611722667675,"results":"44","hashOfConfig":"27"},{"size":2508,"mtime":1611338668005,"results":"45","hashOfConfig":"27"},{"size":2796,"mtime":1612132037461,"results":"46","hashOfConfig":"27"},{"size":1659,"mtime":1611535380892,"results":"47","hashOfConfig":"27"},{"size":3410,"mtime":1611716505793,"results":"48","hashOfConfig":"27"},{"size":1028,"mtime":1611535380894,"results":"49","hashOfConfig":"27"},{"size":8998,"mtime":1611768603549,"results":"50","hashOfConfig":"27"},{"size":1235,"mtime":1611535380893,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"h0gt8",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/Header.js",["108"],"import { NavLink } from 'react-router-dom'\nimport finalLogo from '../images/finalLogo.png'\n\nfunction Header() {\n\n  return (\n    <div className=\"navbar-fixed\" >\n      <nav className=\"hf-background\" >\n        <div className=\"nav-wrapper container\">\n          <NavLink to=\"/NBAnalyst\" class=\" right waves-effect waves-light\">\n            <div style={{ fontFamily: \"Verdana, Geneva, sans-serif\", fontSize: \"36px\", fontWeight: \"900\" }}>\n              <img src={finalLogo}/>\n            </div>\n          </NavLink>\n          <ul className=\"left hide-on-med-and-down\">\n            <li className=\"waves-effect waves-light\">\n              <NavLink to=\"/NBAnalyst/playerRanker\">\n                <div style={{ fontFamily: \"Verdana, Geneva, sans-serif\", fontSize: \"24px\", fontWeight: \"700\" }}>Player Ranker</div>\n              </NavLink>\n            </li>\n            <li className=\"waves-effect waves-light\">\n              <NavLink to=\"/NBAnalyst/tradeAnalyzer\">\n                <div style={{ fontFamily: \"Verdana, Geneva, sans-serif\", fontSize: \"24px\", fontWeight: \"700\" }}>Trade Analyzer</div>\n              </NavLink>\n            </li>\n            <li className=\"waves-effect waves-light\">\n              <NavLink to=\"/NBAnalyst/similarPlayers\">\n                <div style={{ fontFamily: \"Verdana, Geneva, sans-serif\", fontSize: \"24px\", fontWeight: \"700\" }}>Similar Players</div>\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Header","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/playerRankerChart.js",["109","110","111"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeFantasyValue.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/App.js",[],["112","113"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/PlayerRankerContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/MainContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeLeagueAverage.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeAverage.js",["114","115","116"],"\n\nexport function computeAverage(player, gamesParameter = player.player_games.length) {\n  let playerGames = player.player_games\n  let gP = gamesParameter\n\n  let playerAverages = {\n    name: player.name,\n    nba_team_id: player.nba_team_id,\n    position: player.position,\n    avg_mins: avgCaddy(playerGames, \"mins\", gP),\n    avg_fgm: avgCaddy(playerGames, \"fgm\", gP),\n    avg_fga: avgCaddy(playerGames, \"fga\", gP),\n    fgp: avgCaddy(playerGames, \"fgp\", gP),\n    avg_ftm: avgCaddy(playerGames, \"ftm\", gP),\n    avg_fta: avgCaddy(playerGames, \"fta\", gP),\n    ftp: avgCaddy(playerGames, \"ftp\", gP),\n    avg_tpm: avgCaddy(playerGames, \"tpm\", gP),\n    avg_tpa: avgCaddy(playerGames, \"tpa\", gP),\n    tpp: avgCaddy(playerGames, \"tpp\", gP),\n    avg_off_reb: avgCaddy(playerGames, \"off_reb\", gP),\n    avg_def_reb: avgCaddy(playerGames, \"def_reb\", gP),\n    avg_tot_reb: avgCaddy(playerGames, \"tot_reb\", gP),\n    avg_assists: avgCaddy(playerGames, \"assists\", gP),\n    avg_steals: avgCaddy(playerGames, \"steals\", gP),\n    avg_blocks: avgCaddy(playerGames, \"blocks\", gP),\n    avg_turnovers: avgCaddy(playerGames, \"turnovers\", gP),\n    avg_plus_minus: avgCaddy(playerGames, \"plus_minus\", gP),\n    avg_p_fouls: avgCaddy(playerGames, \"p_fouls\", gP),\n    avg_points: avgCaddy(playerGames, \"points\", gP),\n    games_played: gamesPlayed(playerGames)\n  }\n  return playerAverages\n}\n\nfunction avgCaddy(playerGames, stat, gP) {\n  switch (stat) {\n    case \"fgp\" || \"ftp\" || \"tpp\":\n      if (playerGames.length > 0) {\n        let madeArray = []\n        let attemptsArray = []\n        let cat = stat.slice(0, 2)\n\n        for (const game in playerGames) {\n          if (parseInt(playerGames[game].mins) > 0) {\n            madeArray.push(parseFloat(playerGames[game][`${cat}m`]))\n            attemptsArray.push(parseFloat(playerGames[game][`${cat}a`]))\n          }\n        }\n\n        // adjust array conditionals to safeguard against User attempting to view more games\n        // than the player has played; no negative slice\n        let adjustMadeArray = []\n        {\n          madeArray.length - gP >= 0\n            ? adjustMadeArray = [...madeArray.slice(madeArray.length - gP)]\n            : adjustMadeArray = [...madeArray]\n        }\n\n        let adjustAttemptsArray = []\n        {\n          attemptsArray.length - gP >= 0\n            ? adjustAttemptsArray = attemptsArray.slice(attemptsArray.length - gP)\n            : adjustAttemptsArray = [...attemptsArray]\n        }\n\n        // conditionals guard against dividing by zero\n        let avgMade = 0.0\n        if (adjustMadeArray.length > 0){\n           avgMade = adjustMadeArray.reduce((tot, val) => tot + val) / adjustMadeArray.length\n        }\n\n        let avgAttempts = 0.0\n        if (adjustAttemptsArray.length > 0){\n           avgAttempts = adjustAttemptsArray.reduce((tot, val) => tot + val) / adjustAttemptsArray.length\n        }\n\n        if (avgAttempts > 0){\n          return parseFloat((avgMade * 100 / avgAttempts).toFixed(1))\n        } else {\n          return 0.0\n        }\n      } else {\n        return 0.0\n      }\n    default:\n      if (playerGames.length > 0) {\n        let sumArray = []\n        for (const game in playerGames) {\n          if(parseInt(playerGames[game].mins) > 0) {\n            sumArray.push(parseFloat(playerGames[game][stat]))\n          }\n        }\n        let adjustArray = []\n        {\n          sumArray.length - gP >= 0\n            ? adjustArray = [...sumArray.slice(sumArray.length - gP)]\n            : adjustArray = [...sumArray]\n        }\n        let average = 0.0 \n        if (adjustArray.length > 0){\n          average = parseFloat((adjustArray.reduce((tot, val) => tot + val) / gP).toFixed(1))\n        } else {\n          average = 0.0\n        }\n        return average\n      } else {\n        return 0.0\n      }\n  }\n}\n\nfunction gamesPlayed(playerGames){\n  let gamesPlayed = []\n  for (const game in playerGames) {\n    if(parseInt(playerGames[game].mins) > 0) {\n      gamesPlayed.push(1)\n    }\n  }\n  return gamesPlayed.length\n}",["117","118"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/TradeAnalyzerContainer.js",["119","120"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/index.js",[],["121","122"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/footer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actionTypes.js",[],["123","124"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/reportWebVitals.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actions.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/WelcomePageContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/loading.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/SimilarPlayersContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/similarPlayerChart.js",["125"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/CategorySelector.js",["126","127"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/categorySelector.js",["128","129"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/rootReducer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/tradeAnalyzerSelector.js",["130","131"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeTradeScore.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/tradeResultChart.js",["132"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/combineValues.js",[],{"ruleId":"133","severity":1,"message":"134","line":12,"column":15,"nodeType":"135","endLine":12,"endColumn":37},{"ruleId":"136","severity":1,"message":"137","line":23,"column":13,"nodeType":"138","messageId":"139","endLine":23,"endColumn":33},{"ruleId":"140","severity":1,"message":"141","line":28,"column":6,"nodeType":"142","endLine":28,"endColumn":18,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"144","line":81,"column":7,"nodeType":"138","messageId":"139","endLine":81,"endColumn":20},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":54,"column":9,"nodeType":"151","messageId":"152","endLine":58,"endColumn":10},{"ruleId":"149","severity":1,"message":"150","line":61,"column":9,"nodeType":"151","messageId":"152","endLine":65,"endColumn":10},{"ruleId":"149","severity":1,"message":"150","line":95,"column":9,"nodeType":"151","messageId":"152","endLine":99,"endColumn":10},{"ruleId":"145","replacedBy":"153"},{"ruleId":"147","replacedBy":"154"},{"ruleId":"136","severity":1,"message":"155","line":5,"column":21,"nodeType":"138","messageId":"139","endLine":5,"endColumn":29},{"ruleId":"140","severity":1,"message":"156","line":18,"column":6,"nodeType":"142","endLine":18,"endColumn":34,"suggestions":"157"},{"ruleId":"145","replacedBy":"158"},{"ruleId":"147","replacedBy":"159"},{"ruleId":"145","replacedBy":"160"},{"ruleId":"147","replacedBy":"161"},{"ruleId":"136","severity":1,"message":"162","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"163","severity":2,"message":"164","line":41,"column":3,"nodeType":"165","messageId":"166","endLine":41,"endColumn":22},{"ruleId":"167","severity":2,"message":"168","line":41,"column":3,"nodeType":"138","messageId":"169","endLine":41,"endColumn":22},{"ruleId":"136","severity":1,"message":"170","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"140","severity":1,"message":"156","line":34,"column":6,"nodeType":"142","endLine":34,"endColumn":21,"suggestions":"171"},{"ruleId":"140","severity":1,"message":"172","line":18,"column":6,"nodeType":"142","endLine":18,"endColumn":21,"suggestions":"173"},{"ruleId":"140","severity":1,"message":"174","line":22,"column":6,"nodeType":"142","endLine":22,"endColumn":8,"suggestions":"175"},{"ruleId":"140","severity":1,"message":"176","line":38,"column":6,"nodeType":"142","endLine":38,"endColumn":19,"suggestions":"177"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'sortedCombinedValues' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'playerAverages'. Either include it or remove the dependency array.","ArrayExpression",["178"],"'ColoredColumn' is assigned a value but never used.","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["179"],["180"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["181"],["179"],["180"],["179"],["180"],"'useEffect' is defined but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'dispatchSetCategory' is not defined.","undef","'Button' is defined but never used.",["182"],"React Hook useEffect has a missing dependency: 'allPlayers'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has missing dependencies: 'allPlayers' and 'fantasyValues'. Either include them or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'finalScore' and 'theirPlayers'. Either include them or remove the dependency array.",["185"],{"desc":"186","fix":"187"},"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"192","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [categories, playerAverages]",{"range":"197","text":"198"},"Update the dependencies array to be: [playerAverages, categories, props]",{"range":"199","text":"200"},"Update the dependencies array to be: [categoriesObj, props]",{"range":"201","text":"202"},"Update the dependencies array to be: [allPlayers, fantasyValues]",{"range":"203","text":"204"},{"range":"205","text":"204"},"Update the dependencies array to be: [finalScore, theirPlayers, yourPlayers]",{"range":"206","text":"207"},[1049,1061],"[categories, playerAverages]",[774,802],"[playerAverages, categories, props]",[1054,1069],"[categoriesObj, props]",[800,815],"[allPlayers, fantasyValues]",[907,909],[1121,1134],"[finalScore, theirPlayers, yourPlayers]"]