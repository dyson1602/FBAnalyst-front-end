[{"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/Header.js":"1","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/playerRankerChart.js":"2","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeFantasyValue.js":"3","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/App.js":"4","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/PlayerRankerContainer.js":"5","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/MainContainer.js":"6","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeLeagueAverage.js":"7","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeAverage.js":"8","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/TradeAnalyzerContainer.js":"9","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/index.js":"10","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/footer.js":"11","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actionTypes.js":"12","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/reportWebVitals.js":"13","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actions.js":"14","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/WelcomePageContainer.js":"15","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/loading.js":"16","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/SimilarPlayersContainer.js":"17","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/similarPlayerChart.js":"18","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/CategorySelector.js":"19","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/categorySelector.js":"20","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/rootReducer.js":"21","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/tradeAnalyzerSelector.js":"22","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeTradeScore.js":"23","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/tradeResultChart.js":"24","/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/combineValues.js":"25"},{"size":1043,"mtime":1611270122437,"results":"26","hashOfConfig":"27"},{"size":4158,"mtime":1611509104035,"results":"28","hashOfConfig":"27"},{"size":2891,"mtime":1611437395812,"results":"29","hashOfConfig":"27"},{"size":1133,"mtime":1611441537450,"results":"30","hashOfConfig":"27"},{"size":473,"mtime":1611510119688,"results":"31","hashOfConfig":"27"},{"size":1766,"mtime":1611510339913,"results":"32","hashOfConfig":"27"},{"size":1682,"mtime":1611189061225,"results":"33","hashOfConfig":"27"},{"size":3994,"mtime":1611189061225,"results":"34","hashOfConfig":"27"},{"size":1299,"mtime":1611510806341,"results":"35","hashOfConfig":"27"},{"size":888,"mtime":1610578751202,"results":"36","hashOfConfig":"27"},{"size":1098,"mtime":1611441537450,"results":"37","hashOfConfig":"27"},{"size":159,"mtime":1611441537452,"results":"38","hashOfConfig":"27"},{"size":362,"mtime":1610231744011,"results":"39","hashOfConfig":"27"},{"size":444,"mtime":1611441537453,"results":"40","hashOfConfig":"27"},{"size":292,"mtime":1611265028704,"results":"41","hashOfConfig":"27"},{"size":166,"mtime":1611270122438,"results":"42","hashOfConfig":"27"},{"size":179,"mtime":1611328284547,"results":"43","hashOfConfig":"27"},{"size":1449,"mtime":1611350708032,"results":"44","hashOfConfig":"27"},{"size":2508,"mtime":1611338668005,"results":"45","hashOfConfig":"27"},{"size":2987,"mtime":1611508854779,"results":"46","hashOfConfig":"27"},{"size":1406,"mtime":1611508958769,"results":"47","hashOfConfig":"27"},{"size":2901,"mtime":1611509056454,"results":"48","hashOfConfig":"27"},{"size":461,"mtime":1611509575267,"results":"49","hashOfConfig":"27"},{"size":160,"mtime":1611438970445,"results":"50","hashOfConfig":"27"},{"size":1235,"mtime":1611507601438,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h0gt8",{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/Header.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/playerRankerChart.js",["108"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeFantasyValue.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/App.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/PlayerRankerContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/MainContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeLeagueAverage.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeAverage.js",["109","110","111"],"\n\nexport function computeAverage(player, gamesParameter = player.player_games.length) {\n  let playerGames = player.player_games\n  let gP = gamesParameter\n\n  let playerAverages = {\n    name: player.name,\n    nba_team_id: player.nba_team_id,\n    position: player.position,\n    avg_mins: avgCaddy(playerGames, \"mins\", gP),\n    avg_fgm: avgCaddy(playerGames, \"fgm\", gP),\n    avg_fga: avgCaddy(playerGames, \"fga\", gP),\n    fgp: avgCaddy(playerGames, \"fgp\", gP),\n    avg_ftm: avgCaddy(playerGames, \"ftm\", gP),\n    avg_fta: avgCaddy(playerGames, \"fta\", gP),\n    ftp: avgCaddy(playerGames, \"ftp\", gP),\n    avg_tpm: avgCaddy(playerGames, \"tpm\", gP),\n    avg_tpa: avgCaddy(playerGames, \"tpa\", gP),\n    tpp: avgCaddy(playerGames, \"tpp\", gP),\n    avg_off_reb: avgCaddy(playerGames, \"off_reb\", gP),\n    avg_def_reb: avgCaddy(playerGames, \"def_reb\", gP),\n    avg_tot_reb: avgCaddy(playerGames, \"tot_reb\", gP),\n    avg_assists: avgCaddy(playerGames, \"assists\", gP),\n    avg_steals: avgCaddy(playerGames, \"steals\", gP),\n    avg_blocks: avgCaddy(playerGames, \"blocks\", gP),\n    avg_turnovers: avgCaddy(playerGames, \"turnovers\", gP),\n    avg_plus_minus: avgCaddy(playerGames, \"plus_minus\", gP),\n    avg_p_fouls: avgCaddy(playerGames, \"p_fouls\", gP),\n    avg_points: avgCaddy(playerGames, \"points\", gP),\n    games_played: gamesPlayed(playerGames)\n  }\n  return playerAverages\n}\n\nfunction avgCaddy(playerGames, stat, gP) {\n  switch (stat) {\n    case \"fgp\" || \"ftp\" || \"tpp\":\n      if (playerGames.length > 0) {\n        let madeArray = []\n        let attemptsArray = []\n        let cat = stat.slice(0, 2)\n\n        for (const game in playerGames) {\n          if (parseInt(playerGames[game].mins) > 0) {\n            madeArray.push(parseFloat(playerGames[game][`${cat}m`]))\n            attemptsArray.push(parseFloat(playerGames[game][`${cat}a`]))\n          }\n        }\n\n        // adjust array conditionals to safeguard against User attempting to view more games\n        // than the player has played; no negative slice\n        let adjustMadeArray = []\n        {\n          madeArray.length - gP >= 0\n            ? adjustMadeArray = [...madeArray.slice(madeArray.length - gP)]\n            : adjustMadeArray = [...madeArray]\n        }\n\n        let adjustAttemptsArray = []\n        {\n          attemptsArray.length - gP >= 0\n            ? adjustAttemptsArray = attemptsArray.slice(attemptsArray.length - gP)\n            : adjustAttemptsArray = [...attemptsArray]\n        }\n\n        // conditionals guard against dividing by zero\n        let avgMade = 0.0\n        if (adjustMadeArray.length > 0){\n           avgMade = adjustMadeArray.reduce((tot, val) => tot + val) / adjustMadeArray.length\n        }\n\n        let avgAttempts = 0.0\n        if (adjustAttemptsArray.length > 0){\n           avgAttempts = adjustAttemptsArray.reduce((tot, val) => tot + val) / adjustAttemptsArray.length\n        }\n\n        if (avgAttempts > 0){\n          return parseFloat((avgMade * 100 / avgAttempts).toFixed(1))\n        } else {\n          return 0.0\n        }\n      } else {\n        return 0.0\n      }\n    default:\n      if (playerGames.length > 0) {\n        let sumArray = []\n        for (const game in playerGames) {\n          if(parseInt(playerGames[game].mins) > 0) {\n            sumArray.push(parseFloat(playerGames[game][stat]))\n          }\n        }\n        let adjustArray = []\n        {\n          sumArray.length - gP >= 0\n            ? adjustArray = [...sumArray.slice(sumArray.length - gP)]\n            : adjustArray = [...sumArray]\n        }\n        let average = 0.0 \n        if (adjustArray.length > 0){\n          average = parseFloat((adjustArray.reduce((tot, val) => tot + val) / gP).toFixed(1))\n        } else {\n          average = 0.0\n        }\n        return average\n      } else {\n        return 0.0\n      }\n  }\n}\n\nfunction gamesPlayed(playerGames){\n  let gamesPlayed = []\n  for (const game in playerGames) {\n    if(parseInt(playerGames[game].mins) > 0) {\n      gamesPlayed.push(1)\n    }\n  }\n  return gamesPlayed.length\n}",["112","113"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/TradeAnalyzerContainer.js",["114","115"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/index.js",[],["116","117"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/footer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actionTypes.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/reportWebVitals.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/actions.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/WelcomePageContainer.js",["118"],"export default function WelcomePageContainer() {\n  return (\n    <div className=\"welcome\">\n      <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fa.espncdn.com%2Fcombiner%2Fi%3Fimg%3D%252Fphoto%252F2017%252F0525%252Fr212664_1296x729_16-9.jpg&f=1&nofb=1\"/>\n    </div>\n  )\n}",["119","120"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/loading.js",[],["121","122"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Containers/SimilarPlayersContainer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/similarPlayerChart.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/CategorySelector.js",["123","124"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/categorySelector.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Redux/rootReducer.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/tradeAnalyzerSelector.js",["125","126","127"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/computeTradeScore.js",["128","129","130","131","132"],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/Components/tradeResultChart.js",[],"/Users/chrisclark/Flatiron/code/mod5/NBAnalyst-front-end/src/StatFunctions/combineValues.js",[],{"ruleId":"133","severity":1,"message":"134","line":23,"column":5,"nodeType":"135","endLine":23,"endColumn":17,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":54,"column":9,"nodeType":"139","messageId":"140","endLine":58,"endColumn":10},{"ruleId":"137","severity":1,"message":"138","line":61,"column":9,"nodeType":"139","messageId":"140","endLine":65,"endColumn":10},{"ruleId":"137","severity":1,"message":"138","line":95,"column":9,"nodeType":"139","messageId":"140","endLine":99,"endColumn":10},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":5,"column":21,"nodeType":"147","messageId":"148","endLine":5,"endColumn":29},{"ruleId":"133","severity":1,"message":"149","line":18,"column":6,"nodeType":"135","endLine":18,"endColumn":22,"suggestions":"150"},{"ruleId":"141","replacedBy":"151"},{"ruleId":"143","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":4,"column":7,"nodeType":"155","endLine":4,"endColumn":186},{"ruleId":"141","replacedBy":"156"},{"ruleId":"143","replacedBy":"157"},{"ruleId":"141","replacedBy":"158"},{"ruleId":"143","replacedBy":"159"},{"ruleId":"160","severity":2,"message":"161","line":41,"column":3,"nodeType":"162","messageId":"163","endLine":41,"endColumn":22},{"ruleId":"164","severity":2,"message":"165","line":41,"column":3,"nodeType":"147","messageId":"166","endLine":41,"endColumn":22},{"ruleId":"145","severity":1,"message":"167","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"168","line":54,"column":13,"nodeType":"147","messageId":"148","endLine":54,"endColumn":27},{"ruleId":"145","severity":1,"message":"169","line":55,"column":13,"nodeType":"147","messageId":"148","endLine":55,"endColumn":23},{"ruleId":"145","severity":1,"message":"170","line":5,"column":9,"nodeType":"147","messageId":"148","endLine":5,"endColumn":19},{"ruleId":"145","severity":1,"message":"171","line":6,"column":9,"nodeType":"147","messageId":"148","endLine":6,"endColumn":19},{"ruleId":"145","severity":1,"message":"172","line":12,"column":7,"nodeType":"147","messageId":"148","endLine":12,"endColumn":9},{"ruleId":"145","severity":1,"message":"173","line":15,"column":9,"nodeType":"147","messageId":"148","endLine":15,"endColumn":12},{"ruleId":"145","severity":1,"message":"174","line":16,"column":16,"nodeType":"147","messageId":"148","endLine":16,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'playerAverages'. Either include it or remove the dependency array.","ArrayExpression",["175"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'categories' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["178"],["176"],["177"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["176"],["177"],["176"],["177"],"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'dispatchSetCategory' is not defined.","undef","'useEffect' is defined but never used.","'combinedValues' is assigned a value but never used.","'tradeScore' is assigned a value but never used.","'teamAScore' is assigned a value but never used.","'teamBScore' is assigned a value but never used.","'ia' is assigned a value but never used.","'sum' is assigned a value but never used.","'category' is assigned a value but never used.",{"desc":"179","fix":"180"},"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},"Update the dependencies array to be: [categories, playerAverages]",{"range":"183","text":"184"},"Update the dependencies array to be: [categories, playerAverages, props]",{"range":"185","text":"186"},[893,905],"[categories, playerAverages]",[773,789],"[categories, playerAverages, props]"]